image: ubuntu:latest

# You do not need this job if you use an interpreted language such as Python
build-job:
  stage: build
  script:
    - apt-get update -y && apt install -y make cmake g++ git libboost-all-dev
    - git submodule update --init --recursive
    - cd code-coverage
    - make build
    - cd ..
    - cd fuzzer
    - make build
    - cd ..
  artifacts:
    paths:
      - "code-coverage/build/" # replace by the directory where the resulting binary is stored and everything needed to run it
      - "fuzzer/build/" 
    expire_in: 1 hour

task1-test:
  stage: test
  dependencies:
    - build-job
  #rules:
    #- changes: 
        #- code-coverage/* # Only run it if you changed something to task 1
  script:
    - apt-get update -y && apt install -y make cmake g++ lcov git
    - git submodule update --init --recursive
    - cd code-coverage
    - make test
  coverage: "/^Coverage: ([0-9]{1,3})%$/" #Look at those regexes for your specific code coverage tool,  https://docs.gitlab.com/ee/ci/testing/code_coverage.html#test-coverage-examples

task2-test:
  stage: test
  dependencies:
    - build-job
  script:
    - apt-get update -y && apt install -y make cmake g++ lcov
    - cd fuzzer
    - make test
  coverage: "/^Coverage: ([0-9]{1,3})%$/"
  artifacts:
    paths:
      - "code-coverage/coverage.txt" # contains just the coverage percentage as a number

task1-benchmark:
  stage: test
  dependencies:
    - build-job
  #rules:
    #- changes: 
      #- code-coverage/* # Only run it if you changed something to task 1
  script:
    - apt-get update -y && apt install -y make cmake g++
    - cd code-coverage
    - make benchmark

task1-grade:
  image:
    name: pierredb/ni-apt-grader:latest
    pull_policy: always
  #rules:
    #- changes: 
        #- code-coverage/* # Only run it if you changed something to task 1
  stage: test
  needs: ["task1-test", "task1-benchmark"]
  script:
    - apt-get update -y && apt install -y make cmake g++ lcov git
    - git submodule update --init --recursive
    - export PROJECT_DIR=$PWD
    - cd /grader
    - ./grade --task 1 $PROJECT_DIR/code-coverage

task2-grade:
  image:
    name: pierredb/ni-apt-grader:latest
    pull_policy: always
  stage: test
  #needs: ["test"]
  script:
    - export PROJECT_DIR=$PWD
    - cd /grader
    - ./grade --task 2 $PROJECT_DIR/fuzzer
